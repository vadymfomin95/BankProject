name: bankApp

services:
  zookeeper:
    image: "harbor.shared.avalaunch.rbua/docker-hub-proxy/confluentinc/cp-zookeeper:latest"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - bank-network

  kafka:
    image: "harbor.shared.avalaunch.rbua/docker-hub-proxy/confluentinc/cp-kafka:7.3.0"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - bank-network

  accounts-db:
    image: "harbor.shared.avalaunch.rbua/docker-hub-proxy/library/postgres:latest"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: accounts
    ports:
      - "5432:5432"
    volumes:
      - accounts-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      bank-network:
  cards-db:
    image: "harbor.shared.avalaunch.rbua/docker-hub-proxy/library/postgres:latest"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cards
    ports:
      - "5433:5432"
    volumes:
      - cards-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      bank-network:
  loans-db:
    image: "harbor.shared.avalaunch.rbua/docker-hub-proxy/library/postgres:latest"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: loans
    ports:
      - "5434:5432"
    volumes:
      - loans-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      bank-network:

  config-service:
    image: "solvation95/config-server"
    ports:
      - "8888:8888"
    networks:
      bank-network:
    depends_on:
      - kafka
    volumes:
      - ./server_truststore.jks:/opt/server_truststore.jks:ro
    environment:
      TRUSTSTORE_PATH: file:/opt/server_truststore.jks
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    healthcheck:
      test: "curl --fail http://localhost:8888/actuator/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
  accounts-service:
    image: "solvation95/accounts"
    ports:
      - "9003:8080"
    networks:
      bank-network:
    depends_on:
      accounts-db:
        condition: service_healthy
      config-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_CONFIG_IMPORT: configserver:http://config-service:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://accounts-db:5432/accounts
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    healthcheck:
      test: "curl --fail http://localhost:8080/actuator/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
  cards-service:
    image: "solvation95/cards"
    ports:
      - "9001:8080"
    networks:
      bank-network:
    depends_on:
      cards-db:
        condition: service_healthy
      config-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://cards-db:5432/cards
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    healthcheck:
      test: "curl --fail http://localhost:8080/actuator/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
  loans-service:
    image: "solvation95/loans"
    ports:
      - "9002:8080"
    networks:
      bank-network:
    depends_on:
      loans-db:
        condition: service_healthy
      config-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_CONFIG_IMPORT: configserver:http://config-service:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://loans-db:5432/loans
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    healthcheck:
      test: "curl --fail http://localhost:8080/actuator/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  bank-network:

volumes:
  accounts-data:
  cards-data:
  loans-data:

